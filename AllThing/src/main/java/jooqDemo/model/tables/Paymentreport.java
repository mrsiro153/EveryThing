/*
 * This file is generated by jOOQ.
*/
package jooqDemo.model.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooqDemo.model.Account;
import jooqDemo.model.Keys;
import jooqDemo.model.tables.records.PaymentreportRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Paymentreport extends TableImpl<PaymentreportRecord> {

    private static final long serialVersionUID = 777552596;

    /**
     * The reference instance of <code>account.paymentReport</code>
     */
    public static final Paymentreport PAYMENTREPORT = new Paymentreport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentreportRecord> getRecordType() {
        return PaymentreportRecord.class;
    }

    /**
     * The column <code>account.paymentReport.paymentReportId</code>.
     */
    public final TableField<PaymentreportRecord, Integer> PAYMENTREPORTID = createField("paymentReportId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>account.paymentReport.requestId</code>.
     */
    public final TableField<PaymentreportRecord, String> REQUESTID = createField("requestId", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>account.paymentReport.reporterCif</code>.
     */
    public final TableField<PaymentreportRecord, String> REPORTERCIF = createField("reporterCif", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>account.paymentReport.accusedCif</code>.
     */
    public final TableField<PaymentreportRecord, String> ACCUSEDCIF = createField("accusedCif", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>account.paymentReport.description</code>.
     */
    public final TableField<PaymentreportRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>account.paymentReport.status</code>.
     */
    public final TableField<PaymentreportRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>account.paymentReport.createdAt</code>.
     */
    public final TableField<PaymentreportRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>account.paymentReport.modifiedAt</code>.
     */
    public final TableField<PaymentreportRecord, Timestamp> MODIFIEDAT = createField("modifiedAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>account.paymentReport</code> table reference
     */
    public Paymentreport() {
        this("paymentReport", null);
    }

    /**
     * Create an aliased <code>account.paymentReport</code> table reference
     */
    public Paymentreport(String alias) {
        this(alias, PAYMENTREPORT);
    }

    private Paymentreport(String alias, Table<PaymentreportRecord> aliased) {
        this(alias, aliased, null);
    }

    private Paymentreport(String alias, Table<PaymentreportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Account.ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PaymentreportRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PAYMENTREPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PaymentreportRecord> getPrimaryKey() {
        return Keys.KEY_PAYMENTREPORT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PaymentreportRecord>> getKeys() {
        return Arrays.<UniqueKey<PaymentreportRecord>>asList(Keys.KEY_PAYMENTREPORT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Paymentreport as(String alias) {
        return new Paymentreport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Paymentreport rename(String name) {
        return new Paymentreport(name, null);
    }
}
