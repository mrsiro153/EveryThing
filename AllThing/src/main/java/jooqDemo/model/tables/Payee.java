/*
 * This file is generated by jOOQ.
*/
package jooqDemo.model.tables;


import jooqDemo.model.Account;
import jooqDemo.model.Keys;
import jooqDemo.model.tables.records.PayeeRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Payee extends TableImpl<PayeeRecord> {

    private static final long serialVersionUID = 1736434265;

    /**
     * The reference instance of <code>account.payee</code>
     */
    public static final Payee PAYEE = new Payee();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PayeeRecord> getRecordType() {
        return PayeeRecord.class;
    }

    /**
     * The column <code>account.payee.payeeId</code>.
     */
    public final TableField<PayeeRecord, String> PAYEEID = createField("payeeId", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>account.payee.fullName</code>.
     */
    public final TableField<PayeeRecord, String> FULLNAME = createField("fullName", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>account.payee.phone</code>.
     */
    public final TableField<PayeeRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>account.payee.email</code>.
     */
    public final TableField<PayeeRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>account.payee.avatar</code>.
     */
    public final TableField<PayeeRecord, String> AVATAR = createField("avatar", org.jooq.impl.SQLDataType.VARCHAR.length(512), this, "");

    /**
     * The column <code>account.payee.status</code>.
     */
    public final TableField<PayeeRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>account.payee.cif</code>.
     */
    public final TableField<PayeeRecord, String> CIF = createField("cif", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>account.payee.modifiedAt</code>.
     */
    public final TableField<PayeeRecord, Long> MODIFIEDAT = createField("modifiedAt", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>account.payee.createdAt</code>.
     */
    public final TableField<PayeeRecord, Long> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>account.payee</code> table reference
     */
    public Payee() {
        this("payee", null);
    }

    /**
     * Create an aliased <code>account.payee</code> table reference
     */
    public Payee(String alias) {
        this(alias, PAYEE);
    }

    private Payee(String alias, Table<PayeeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Payee(String alias, Table<PayeeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Account.ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PayeeRecord> getPrimaryKey() {
        return Keys.KEY_PAYEE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PayeeRecord>> getKeys() {
        return Arrays.<UniqueKey<PayeeRecord>>asList(Keys.KEY_PAYEE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Payee as(String alias) {
        return new Payee(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Payee rename(String name) {
        return new Payee(name, null);
    }
}
