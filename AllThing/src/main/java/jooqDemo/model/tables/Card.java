/*
 * This file is generated by jOOQ.
*/
package jooqDemo.model.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooqDemo.model.Account;
import jooqDemo.model.Keys;
import jooqDemo.model.tables.records.CardRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Card extends TableImpl<CardRecord> {

    private static final long serialVersionUID = 538030702;

    /**
     * The reference instance of <code>account.card</code>
     */
    public static final Card CARD = new Card();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CardRecord> getRecordType() {
        return CardRecord.class;
    }

    /**
     * The column <code>account.card.cardNumber</code>.
     */
    public final TableField<CardRecord, String> CARDNUMBER = createField("cardNumber", org.jooq.impl.SQLDataType.VARCHAR.length(31).nullable(false), this, "");

    /**
     * The column <code>account.card.accountNumber</code>.
     */
    public final TableField<CardRecord, String> ACCOUNTNUMBER = createField("accountNumber", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

    /**
     * The column <code>account.card.cardName</code>.
     */
    public final TableField<CardRecord, String> CARDNAME = createField("cardName", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

    /**
     * The column <code>account.card.embossingName</code>.
     */
    public final TableField<CardRecord, String> EMBOSSINGNAME = createField("embossingName", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

    /**
     * The column <code>account.card.dateIssue</code>.
     */
    public final TableField<CardRecord, Date> DATEISSUE = createField("dateIssue", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>account.card.dateExpires</code>.
     */
    public final TableField<CardRecord, Date> DATEEXPIRES = createField("dateExpires", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>account.card.status</code>.
     */
    public final TableField<CardRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>account.card.preStatus</code>.
     */
    public final TableField<CardRecord, Integer> PRESTATUS = createField("preStatus", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>account.card.cardType</code>.
     */
    public final TableField<CardRecord, Integer> CARDTYPE = createField("cardType", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>account.card.ecomerceStatus</code>.
     */
    public final TableField<CardRecord, Integer> ECOMERCESTATUS = createField("ecomerceStatus", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>account.card.createdAt</code>.
     */
    public final TableField<CardRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>account.card.modifiedAt</code>.
     */
    public final TableField<CardRecord, Timestamp> MODIFIEDAT = createField("modifiedAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>account.card</code> table reference
     */
    public Card() {
        this("card", null);
    }

    /**
     * Create an aliased <code>account.card</code> table reference
     */
    public Card(String alias) {
        this(alias, CARD);
    }

    private Card(String alias, Table<CardRecord> aliased) {
        this(alias, aliased, null);
    }

    private Card(String alias, Table<CardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Account.ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CardRecord> getPrimaryKey() {
        return Keys.KEY_CARD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CardRecord>> getKeys() {
        return Arrays.<UniqueKey<CardRecord>>asList(Keys.KEY_CARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Card as(String alias) {
        return new Card(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Card rename(String name) {
        return new Card(name, null);
    }
}
