/*
 * This file is generated by jOOQ.
*/
package citad.model.tables;


import citad.model.Keys;
import citad.model.Transaction;
import citad.model.tables.records.UserdatacontextRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userdatacontext extends TableImpl<UserdatacontextRecord> {

    private static final long serialVersionUID = -1856181595;

    /**
     * The reference instance of <code>transaction.userDataContext</code>
     */
    public static final Userdatacontext USERDATACONTEXT = new Userdatacontext();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserdatacontextRecord> getRecordType() {
        return UserdatacontextRecord.class;
    }

    /**
     * The column <code>transaction.userDataContext.id</code>.
     */
    public final TableField<UserdatacontextRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>transaction.userDataContext.refKey</code>.
     */
    public final TableField<UserdatacontextRecord, String> REFKEY = createField("refKey", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>transaction.userDataContext.cif</code>.
     */
    public final TableField<UserdatacontextRecord, String> CIF = createField("cif", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>transaction.userDataContext.dataContext</code>.
     */
    public final TableField<UserdatacontextRecord, String> DATACONTEXT = createField("dataContext", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>transaction.userDataContext.createdAt</code>.
     */
    public final TableField<UserdatacontextRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>transaction.userDataContext.modifyAt</code>.
     */
    public final TableField<UserdatacontextRecord, Timestamp> MODIFYAT = createField("modifyAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>transaction.userDataContext</code> table reference
     */
    public Userdatacontext() {
        this("userDataContext", null);
    }

    /**
     * Create an aliased <code>transaction.userDataContext</code> table reference
     */
    public Userdatacontext(String alias) {
        this(alias, USERDATACONTEXT);
    }

    private Userdatacontext(String alias, Table<UserdatacontextRecord> aliased) {
        this(alias, aliased, null);
    }

    private Userdatacontext(String alias, Table<UserdatacontextRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Transaction.TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserdatacontextRecord, Long> getIdentity() {
        return Keys.IDENTITY_USERDATACONTEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserdatacontextRecord> getPrimaryKey() {
        return Keys.KEY_USERDATACONTEXT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserdatacontextRecord>> getKeys() {
        return Arrays.<UniqueKey<UserdatacontextRecord>>asList(Keys.KEY_USERDATACONTEXT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userdatacontext as(String alias) {
        return new Userdatacontext(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Userdatacontext rename(String name) {
        return new Userdatacontext(name, null);
    }
}
