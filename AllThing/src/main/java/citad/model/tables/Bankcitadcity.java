/*
 * This file is generated by jOOQ.
*/
package citad.model.tables;


import citad.model.Keys;
import citad.model.Transaction;
import citad.model.tables.records.BankcitadcityRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bankcitadcity extends TableImpl<BankcitadcityRecord> {

    private static final long serialVersionUID = -1591615633;

    /**
     * The reference instance of <code>transaction.bankCitadCity</code>
     */
    public static final Bankcitadcity BANKCITADCITY = new Bankcitadcity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BankcitadcityRecord> getRecordType() {
        return BankcitadcityRecord.class;
    }

    /**
     * The column <code>transaction.bankCitadCity.cityId</code>.
     */
    public final TableField<BankcitadcityRecord, String> CITYID = createField("cityId", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>transaction.bankCitadCity.cityName</code>.
     */
    public final TableField<BankcitadcityRecord, String> CITYNAME = createField("cityName", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>transaction.bankCitadCity</code> table reference
     */
    public Bankcitadcity() {
        this("bankCitadCity", null);
    }

    /**
     * Create an aliased <code>transaction.bankCitadCity</code> table reference
     */
    public Bankcitadcity(String alias) {
        this(alias, BANKCITADCITY);
    }

    private Bankcitadcity(String alias, Table<BankcitadcityRecord> aliased) {
        this(alias, aliased, null);
    }

    private Bankcitadcity(String alias, Table<BankcitadcityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Transaction.TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BankcitadcityRecord> getPrimaryKey() {
        return Keys.KEY_BANKCITADCITY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BankcitadcityRecord>> getKeys() {
        return Arrays.<UniqueKey<BankcitadcityRecord>>asList(Keys.KEY_BANKCITADCITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bankcitadcity as(String alias) {
        return new Bankcitadcity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Bankcitadcity rename(String name) {
        return new Bankcitadcity(name, null);
    }
}
