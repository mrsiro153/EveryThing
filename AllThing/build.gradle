group 'Doan Nguyen'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'io.vertx:vertx-core:3.4.2'
    compile 'io.vertx:vertx-web:3.4.2'
    compile 'io.vertx:vertx-web-client:3.4.2'
    compile 'io.vertx:vertx-rabbitmq-client:3.4.2'
    // https://mvnrepository.com/artifact/io.vertx/vertx-health-check
    compile group: 'io.vertx', name: 'vertx-health-check', version: '3.4.2'

    compile group: 'io.vertx', name: 'vertx-tcp-eventbus-bridge', version: '3.3.3'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.38'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.2'
    compile 'org.jooq:jooq:3.9.1'
    compile 'org.jooq:jooq-codegen:3.9.1'
    compile 'com.google.code.gson:gson:2.8.1'

    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.5.0'

    compile 'org.apache.logging.log4j:log4j-core:2.8.2'
    compile 'org.apache.logging.log4j:log4j-api:2.8.2'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
    //
    compile group: 'org.springframework', name: 'spring-web', version: '4.3.10.RELEASE'
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.10'

    //crawler
    compile('edu.uci.ics:crawler4j:4.1') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }

}
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.jooq:jooq:3.9.1'
        classpath 'org.jooq:jooq-meta:3.9.1'
        classpath 'org.jooq:jooq-codegen:3.9.1'
        classpath 'mysql:mysql-connector-java:5.1.38'
    }
}

/*task generate(description: 'generate database model')  {
    def writer = new StringWriter()

    def xml = new groovy.xml.MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.9.0.xsd') {

        jdbc() {
            driver('com.mysql.jdbc.Driver')
            url('jdbc:mysql://server03.ntex.vn:9900/')
            user('root')
            password('1@3Pikachu')
        }
        generator() {
            name 'org.jooq.util.JavaGenerator'
            database() {
                schemata() {
                    schema() {
                        inputSchema 'account'
                    }
                }
            }
            generate() {
                fluentSetters true
            }
            target() {
                packageName('jooqDemo.model')
                directory('src/main/java')
            }
        }
    }
    org.jooq.util.GenerationTool.generate(
            javax.xml.bind.JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
    )
}*/
jar {
    manifest {
        attributes "Main-Class": "TestClass"
    }
    baseName = 'all-in-one-jar'
    doFirst {
        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}
/*
*
* jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                'Implementation-Version': version,
                "Main-Class": "pk1.MainClass"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}*/